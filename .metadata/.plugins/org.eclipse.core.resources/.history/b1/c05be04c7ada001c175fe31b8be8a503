/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "CAN.h"
#include "Console.h"

CAN_Config payload;

void CAN_TX(void)
{
    //General Configutation
    payload.baudrate = CAN_BAUDRATE_1000_KBPS;
    payload.timestamp_enable = CAN_Timestamp_Disable;
    //Filter Configuration
    payload.filter_index = 0;
    payload.filter_scale = CAN_Filter_Scale_32bit;
    payload.filter_type = CAN_FILTER_MASK_MODE;
    payload.filter_bank_index = 0;
    payload.filter_bank1 = 0x00;
    payload.filter_bank2 = 0x00;
    //TX
    payload.baudrate = CAN_BAUDRATE_1000_KBPS;
    payload.TX_Mailbox_ID = CAN_TX_Mailbox_1;
    payload.TX_Frame_Type = CAN_Frame_Data;
    payload.TX_ID_Type = CAN_ID_Standard;
    payload.TX_ID = 0x201;
    payload.TX_data_length = 8;
    payload.TX_data[0] = 0x01;
    payload.TX_data[1] = 0x02;
    payload.TX_data[2] = 0x03;
    payload.TX_data[3] = 0x04;
    payload.TX_data[4] = 0x05;
    payload.TX_data[5] = 0x06;
    payload.TX_data[6] = 0x07;
    payload.TX_data[7] = 0x08;

    CAN_Init(payload);
}



int main(void)
{
    MCU_Clock_Init(Use_External_Crystal);
    Delay_Config();
    Console_Init(115200);
    GPIO_Pin_Setup(GPIOC, 13, GEN_PUSH_PULL_OUTPUT);
    GPIOC -> BSRR |= GPIO_BSRR_BS13;

    CAN_TX();

	for(;;)
	{
		GPIOC -> BSRR |= GPIO_BSRR_BS13;
		CAN_Send_Payload(payload);
		Delay_ms(500);
		printConsole("MCR = %"PRId32"\r\n",CAN1 -> MCR);
		printConsole("MRR = %"PRId32"\r\n",CAN1 -> MCR);
		GPIOC -> BSRR |= GPIO_BSRR_BR13;
		Delay_ms(500);

	}
}

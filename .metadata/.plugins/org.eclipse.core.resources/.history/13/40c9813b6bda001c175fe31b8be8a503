/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "CAN.h"
#include "Console.h"

CAN_Config payload;

void CAN_RX1_IRQHandler(void);



int main(void)
{
    MCU_Clock_Init(Use_External_Crystal);
    Delay_Config();
    Console_Init(115200);
    GPIO_Pin_Setup(GPIOC, 13, GEN_PUSH_PULL_OUTPUT);
    GPIOC -> BSRR |= GPIO_BSRR_BS13;

    //General Configutation
    payload.baudrate = CAN_BAUDRATE_1000_KBPS;
    payload.timestamp_enable = CAN_Timestamp_Disable;
    //Filter Configuration
    payload.filter_index = 0;
    payload.filter_scale = CAN_Filter_Scale_32bit;
    payload.filter_type = CAN_FILTER_MASK_MODE;
    payload.filter_bank_index = 0;
    payload.filter_bank1 = 0x00;
    payload.filter_bank2 = 0x00;
    //TX
    payload.baudrate = CAN_BAUDRATE_1000_KBPS;
    payload.TX_Mailbox_ID = CAN_TX_Mailbox_1;
    payload.TX_Frame_Type = CAN_Frame_Data;
    payload.TX_ID_Type = CAN_ID_Standard;
    payload.TX_ID = 0x201;
    payload.TX_data_length = 8;
    payload.TX_data[0] = 0x01;
    payload.TX_data[1] = 0x02;
    payload.TX_data[2] = 0x03;
    payload.TX_data[3] = 0x04;
    payload.TX_data[4] = 0x05;
    payload.TX_data[5] = 0x06;

    CAN_Init(payload);



	for(;;)
	{
//		CAN_Send_Payload(payload);
		GPIOC -> BSRR |= GPIO_BSRR_BR13;
		printConsole("CAN1 -> sFIFOMailBox[0].RDHR = %"PRIx32"\r\n",(CAN1 -> sFIFOMailBox[0].RDHR));
		printConsole("CAN1 -> sFIFOMailBox[0].RDLR = %"PRIx32 "\r\n",(CAN1 -> sFIFOMailBox[0].RDLR));
//		if((CAN1 -> RF0R & CAN_RF0R_FMP0) != 0x00){
//	//======================================================================================
//
//			if((CAN1 -> sFIFOMailBox[0].RIR & CAN_RI0R_RTR) == CAN_RI0R_RTR)
//			{
//				RX_Mailbox_1.frame_type = CAN_Frame_Remote;
//#if _CAN_DEBUG_
//		printConsole("Frame Type = Remote\r\n");
//#endif
//			}
//
//
//			if((CAN1 -> sFIFOMailBox[0].RIR & CAN_RI0R_RTR) != CAN_RI0R_RTR)
//			{
//				RX_Mailbox_1.frame_type = CAN_Frame_Data;
//#if _CAN_DEBUG_
//		printConsole("Frame Type = Data\r\n");
//#endif
//			}
//
//
//	//======================================================================================
//
//			if((CAN1 -> sFIFOMailBox[0].RIR & CAN_RI0R_IDE) == CAN_RI0R_IDE)
//			{
//				RX_Mailbox_1.id_type = CAN_ID_Extended;
//#if _CAN_DEBUG_
//		printConsole("ID Type = Extended\r\n");
//#endif
//			}
//
//
//			if((CAN1 -> sFIFOMailBox[0].RIR & CAN_RI0R_IDE) != CAN_RI0R_IDE)
//			{
//				RX_Mailbox_1.id_type = CAN_ID_Standard;
//#if _CAN_DEBUG_
//		printConsole("ID Type = Standard\r\n");
//#endif
//			}
//
//
//	//======================================================================================
//			RX_Mailbox_1.message_timestamp = (CAN1 -> sFIFOMailBox[0].RDTR & 0xFF00)>>16;
//	#if _CAN_DEBUG_
//			printConsole("Timestamp = %d\r\n",RX_Mailbox_1.message_timestamp);
//	#endif
//
//			RX_Mailbox_1.message_timestamp = (CAN1 -> sFIFOMailBox[0].RDLR & 0x00FF);
//	#if _CAN_DEBUG_
//			printConsole("Timestamp = %d\r\n",RX_Mailbox_1.message_timestamp);
//	#endif
//	//======================================================================================
//			RX_Mailbox_1.data_length = (CAN1 -> sFIFOMailBox[0].RDTR & 0x0F);
//	#if _CAN_DEBUG_
//			printConsole("Data Length = %d\r\n",RX_Mailbox_1.data_length);
//	#endif
//
//	//======================================================================================
//
//			RX_Mailbox_1.data[0] = CAN1 -> sFIFOMailBox[0].RDLR & 0x000F;
//	#if _CAN_DEBUG_
//			printConsole("Data[0] = %d\r\n",RX_Mailbox_1.data[0]);
//	#endif
//			RX_Mailbox_1.data[1] = CAN1 -> sFIFOMailBox[0].RDLR & 0x00F0;
//	#if _CAN_DEBUG_
//			printConsole("Data[1] = %d\r\n",RX_Mailbox_1.data[1]);
//	#endif
//			RX_Mailbox_1.data[2] = CAN1 -> sFIFOMailBox[0].RDLR & 0x0F00;
//	#if _CAN_DEBUG_
//			printConsole("Data[2] = %d\r\n",RX_Mailbox_1.data[2]);
//	#endif
//			RX_Mailbox_1.data[3] = CAN1 -> sFIFOMailBox[0].RDLR & 0xF000;
//	#if _CAN_DEBUG_
//			printConsole("Data[3] = %d\r\n",RX_Mailbox_1.data[3]);
//	#endif
//			RX_Mailbox_1.data[4] = CAN1 -> sFIFOMailBox[0].RDHR & 0x000F;
//	#if _CAN_DEBUG_
//			printConsole("Data[4] = %d\r\n",RX_Mailbox_1.data[4]);
//	#endif
//			RX_Mailbox_1.data[5] = CAN1 -> sFIFOMailBox[0].RDHR & 0x00F0;
//	#if _CAN_DEBUG_
//			printConsole("Data[5] = %d\r\n",RX_Mailbox_1.data[5]);
//	#endif
//			RX_Mailbox_1.data[6] = CAN1 -> sFIFOMailBox[0].RDHR & 0x0F00;
//	#if _CAN_DEBUG_
//			printConsole("Data[6] = %d\r\n",RX_Mailbox_1.data[6]);
//	#endif
//			RX_Mailbox_1.data[7] = CAN1 -> sFIFOMailBox[0].RDHR & 0xF000;
//	#if _CAN_DEBUG_
//			printConsole("Data[7] = %d\r\n",RX_Mailbox_1.data[7]);
//	#endif
//
//		}
	//****************************************************************************************************
//		if((CAN1 -> RF1R & CAN_RF1R_FMP1) != 0x00){
//	//======================================================================================
//
//			if((CAN1 -> sFIFOMailBox[1].RIR & CAN_RI1R_RTR) == CAN_RI1R_RTR)
//			{
//				RX_Mailbox_2.frame_type = CAN_Frame_Remote;
//			}
//	#if _CAN_DEBUG_
//			printConsole("Frame Type = Remote\r\n");
//	#endif
//
//			if((CAN1 -> sFIFOMailBox[1].RIR & CAN_RI1R_RTR) != CAN_RI1R_RTR)
//			{
//				RX_Mailbox_2.frame_type = CAN_Frame_Data;
//			}
//	#if _CAN_DEBUG_
//			printConsole("Frame Type = Data\r\n");
//	#endif
//
//	//======================================================================================
//
//			if((CAN1 -> sFIFOMailBox[1].RIR & CAN_RI1R_IDE) == CAN_RI1R_IDE)
//			{
//				RX_Mailbox_2.id_type = CAN_ID_Extended;
//			}
//	#if _CAN_DEBUG_
//			printConsole("ID Type = Extended\r\n");
//	#endif
//
//			if((CAN1 -> sFIFOMailBox[1].RIR & CAN_RI1R_IDE) != CAN_RI1R_IDE)
//			{
//				RX_Mailbox_2.id_type = CAN_ID_Standard;
//			}
//	#if _CAN_DEBUG_
//			printConsole("ID Type = Standard\r\n");
//	#endif
//
//	//======================================================================================
//			RX_Mailbox_2.message_timestamp = (CAN1 -> sFIFOMailBox[1].RDTR & 0xFF00)>>16;
//	#if _CAN_DEBUG_
//			printConsole("Timestamp = %d\r\n",RX_Mailbox_2.message_timestamp);
//	#endif
//
//			RX_Mailbox_2.message_timestamp = (CAN1 -> sFIFOMailBox[1].RDLR & 0x00FF);
//	#if _CAN_DEBUG_
//			printConsole("Timestamp = %d\r\n",RX_Mailbox_2.message_timestamp);
//	#endif
//	//======================================================================================
//			RX_Mailbox_2.data_length = (CAN1 -> sFIFOMailBox[1].RDTR & 0x0F);
//	#if _CAN_DEBUG_
//			printConsole("Data Length = %d\r\n",RX_Mailbox_2.data_length);
//	#endif
//
//	//======================================================================================
//
//			RX_Mailbox_2.data[0] = CAN1 -> sFIFOMailBox[1].RDLR & 0x000F;
//	#if _CAN_DEBUG_
//			printConsole("Data[0] = %d\r\n",RX_Mailbox_1.data[0]);
//	#endif
//			RX_Mailbox_2.data[1] = CAN1 -> sFIFOMailBox[1].RDLR & 0x00F0;
//	#if _CAN_DEBUG_
//			printConsole("Data[1] = %d\r\n",RX_Mailbox_1.data[1]);
//	#endif
//			RX_Mailbox_2.data[2] = CAN1 -> sFIFOMailBox[1].RDLR & 0x0F00;
//	#if _CAN_DEBUG_
//			printConsole("Data[2] = %d\r\n",RX_Mailbox_1.data[2]);
//	#endif
//			RX_Mailbox_2.data[3] = CAN1 -> sFIFOMailBox[1].RDLR & 0xF000;
//	#if _CAN_DEBUG_
//			printConsole("Data[3] = %d\r\n",RX_Mailbox_1.data[3]);
//	#endif
//			RX_Mailbox_2.data[4] = CAN1 -> sFIFOMailBox[1].RDHR & 0x000F;
//	#if _CAN_DEBUG_
//			printConsole("Data[4] = %d\r\n",RX_Mailbox_1.data[4]);
//	#endif
//			RX_Mailbox_2.data[5] = CAN1 -> sFIFOMailBox[1].RDHR & 0x00F0;
//	#if _CAN_DEBUG_
//			printConsole("Data[5] = %d\r\n",RX_Mailbox_1.data[5]);
//	#endif
//			RX_Mailbox_2.data[6] = CAN1 -> sFIFOMailBox[1].RDHR & 0x0F00;
//	#if _CAN_DEBUG_
//			printConsole("Data[6] = %d\r\n",RX_Mailbox_1.data[6]);
//	#endif
//			RX_Mailbox_2.data[7] = CAN1 -> sFIFOMailBox[1].RDHR & 0xF000;
//	#if _CAN_DEBUG_
//			printConsole("Data[7] = %d\r\n",RX_Mailbox_1.data[7]);
//	#endif
//
//		}
//		Delay_ms(500);
		GPIOC -> BSRR |= GPIO_BSRR_BS13;
		Delay_s(1);
	}
}



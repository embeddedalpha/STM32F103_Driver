/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "Console.h"
#include "GPIO.h"
#include "CAN.h"

CAN_Config payload;


void A(void)
{
	payload.baudrate = CAN_BAUDRATE_1000_KBPS_HSI;
	payload.timestamp_enable = CAN_Timestamp_Disable;
	payload.filter_type = CAN_FILTER_MASK_MODE;
	payload.filter_scale = CAN_Filter_Scale_32bit;
	payload.filter_index = 0;
	payload.filter_bank1 = 0x00;
	payload.filter_bank2 = 0x00;


}

int main(void)
{
	MCU_Clock_Init(Use_Internal_Crystal);
	Console_Init(115200);
	Delay_Config();
	GPIO_Pin_Setup(GPIOC, 13, GEN_OPEN_DRAIN_OUTPUT);

	A();
	CAN_Init(payload);
    /* Loop forever */
	for(;;)
	{
		GPIOC -> BSRR |= GPIO_BSRR_BS13;
		payload.TX_ID_Type = CAN_ID_Standard;
		payload.TX_ID = 0x20D;
		payload.TX_Frame_Type = CAN_Frame_Data;
		payload.TX_data_length = 8;
		payload.TX_data[0] = 0x01;
		payload.TX_data[1] = 0x02;
		payload.TX_data[2] = 0x03;
		payload.TX_data[3] = 0x04;
		payload.TX_data[4] = 0x05;
		payload.TX_data[5] = 0x06;
		payload.TX_data[6] = 0x07;
		payload.TX_data[7] = 0x08;
		CAN_Send_Payload(payload);
		Delay_s(1);
		GPIOC -> BSRR |= GPIO_BSRR_BR13;
		Delay_s(1);
//
//		if(CAN_Get_Payload(payload) == CAN_RX_Buffer_1)
//		{
//			printConsole("Data from Buffer 1\r\n");
//			printConsole("ID %"PRId32"\r\n",payload.RX_Mailbox_1.ID);
//			printConsole("DLC = &d\r\n",payload.RX_Mailbox_1.data_length);
//			printConsole("Data : ");
//			for(int i = 0; i < payload.RX_Mailbox_1.data_length; i++)
//			{
//				printConsole("%d , ",payload.RX_Mailbox_1.data[i]);
//			}
//			printConsole("\r\n");
//		}
//
//		if(CAN_Get_Payload(payload) == CAN_RX_Buffer_2)
//		{
//			printConsole("Data from Buffer 2\r\n");
//			printConsole("ID %"PRId32"\r\n",payload.RX_Mailbox_2.ID);
//			printConsole("DLC = &d\r\n",payload.RX_Mailbox_2.data_length);
//			printConsole("Data : ");
//			for(int i = 0; i < payload.RX_Mailbox_2.data_length; i++)
//			{
//				printConsole("%d , ",payload.RX_Mailbox_2.data[i]);
//			}
//			printConsole("\r\n");
//		}


	}
}

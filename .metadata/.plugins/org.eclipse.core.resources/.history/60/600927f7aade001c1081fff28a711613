/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "GPIO.h"
#include "Console.h"

int main(void)
{

	float freq = 0;

	MCU_Clock_Init(Use_External_Crystal);
	Console_Init(115200);
	RCC -> APB2ENR |= RCC_APB2ENR_TIM1EN | RCC_APB2ENR_IOPAEN;
	TIM1 -> PSC = 72-1;
	TIM1 -> ARR = 0xFFFF;
	TIM1 -> CCMR1 |= TIM_CCMR1_CC1S_0; //IC1 mapped to T1
	TIM1 -> CCMR1 |= TIM_CCMR1_CC2S_1; //IC2 mapped to T1
	TIM1 -> CCMR1 |= (TIM_CCMR1_IC1F_0 | TIM_CCMR1_IC1F_1);
	TIM1 -> CCMR1 |= (TIM_CCMR1_IC2F_0 | TIM_CCMR1_IC2F_1);
	TIM1 -> CCER &= ~TIM_CCER_CC1P; //non inverted
	TIM1 -> CCER |= TIM_CCER_CC2P; //inverted
	TIM1 -> SMCR |= TIM_SMCR_TS_2 | TIM_SMCR_TS_0; //trigger select
	TIM1 -> SMCR |= TIM_SMCR_SMS_2;
	TIM1 -> CCMR1 &= ~TIM_CCMR1_IC1PSC;
	TIM1 -> CCMR1 &= ~TIM_CCMR1_IC2PSC;
	TIM1 -> CCER |= TIM_CCER_CC1E;
	TIM1 -> CCER |= TIM_CCER_CC2E;
	TIM1 -> CR1 |= TIM_CR1_CEN;

    /* Loop forever */
	for(;;)
	{
		freq = 1.0/((1.0/1000000.0)*(float)(TIM1->CCR1));

		printConsole("Period = %d \r\n", TIM1->CCR1);
		printConsole("Duty Cycle = %d \r\n", TIM1->CCR2);
	}
}

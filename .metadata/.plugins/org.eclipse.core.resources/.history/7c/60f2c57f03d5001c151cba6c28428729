/*
 * CAN.c
 *
 *  Created on: May 16, 2022
 *      Author: Kunal
 */


#include "CAN.h"


void CAN_Init(int32_t baudrate)
{
	RCC -> APB1ENR |= RCC_APB1ENR_CAN1EN;
	GPIO_Pin_Setup(GPIOA, 3, ALT_FUNCTION_OUTPUT_PUSH_PULL);
	GPIO_Pin_Setup(GPIOA, 4, INPUT_FLOATING);
	CAN1 -> MCR |= CAN_MCR_INRQ;
	while(!(CAN1-> MSR & CAN_MSR_INAK)){}
	CAN1 -> BTR = baudrate;

}

/*
	struct CAN_Mailbox1{
	uint32_t Standard_ID;
	uint32_t Extended_ID;
	int ID_Type;
	int Frame_Type;
	int DLC;
	int data[0];
	int data[1];
	int data[2];
	int data[3];
	int data[4];
	int data[5];
	int data[6];
	int data[7];
}CAN_Mailbox1;
 */

void CAN_TX_Mailbox1(void)
{

	switch (CAN_Mailbox1.ID_Type)
	{
		case CAN_ID_Standard:
		{
			CAN1 -> sTxMailBox[0].TIR  |= CAN_Mailbox1.Standard_ID << 21;
			CAN1 -> sTxMailBox[0].TIR  &= ~CAN_TI0R_EXID;
		}
			break;
		case CAN_ID_Extended:
		{
			CAN1 -> sTxMailBox[0].TIR  |= CAN_Mailbox1.Extended_ID << 3;
			CAN1 -> sTxMailBox[0].TIR  |= CAN_TI0R_EXID;
		}
			break;
	}

	switch (CAN_Mailbox1.Frame_Type) {
		case CAN_Frame_Data:
		{

		}
			break;
		case CAN_Frame_Remote:
		{

		}
			break;

	}



	if(CAN_Mailbox1.Frame_Type == CAN_Frame_Data)
	{
		CAN1 -> sTxMailBox[0].TIR  &= ~CAN_TI0R_RTR;
	}

	if


	CAN1 -> sTxMailBox[0].TIR  |= CAN_Mailbox1.Standard_ID << 21;
	CAN1 -> sTxMailBox[0].TDTR |= CAN_Mailbox1.DLC;
	CAN1 -> sTxMailBox[0].TDHR |= CAN_Mailbox1.data[7] << 24 | CAN_Mailbox1.data[6] << 16 | CAN_Mailbox1.data[5] << 8 | CAN_Mailbox1.data[4] << 0;
	CAN1 -> sTxMailBox[0].TDHR |= CAN_Mailbox1.data[3] << 24 | CAN_Mailbox1.data[2] << 16 | CAN_Mailbox1.data[1] << 8 | CAN_Mailbox1.data[0] << 0;





}

void CAN_TX_Mailbox2(void)
{

}

void CAN_TX_Mailbox3(void)
{

}

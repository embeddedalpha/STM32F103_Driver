/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "Console.h"
#include "GPIO.h"
#include "CAN.h"

CAN_Config payload1;


void A(void)
{
	payload.baudrate = CAN_BAUDRATE_1000_KBPS;
	payload.timestamp_enable = CAN_Timestamp_Disable;
	payload.filter_type = CAN_FILTER_MASK_MODE;
	payload.filter_scale = CAN_Filter_Scale_32bit;
	payload.filter_index = 0;
	payload.filter_bank1 = 0x00;
	payload.filter_bank2 = 0x00;


}

int main(void)
{
	MCU_Clock_Init(Use_External_Crystal);
	Console_Init(115200);
	Delay_Config();

	A();
	CAN_Init(payload);





    /* Loop forever */
	for(;;)
	{
		payload.TX_ID_Type = CAN_ID_Standard;
		payload.TX_ID = 0x20D;
		payload.TX_Frame_Type = CAN_Frame_Data;
		payload.TX_data_length = 1;
		payload.TX_data[0] = 0x01;
		CAN_Send_Payload(payload);
		Delay_s(1);
		payload.TX_ID_Type = CAN_ID_Standard;
		payload.TX_ID = 0x20A;
		payload.TX_Frame_Type = CAN_Frame_Data;
		payload.TX_data_length = 1;
		payload.TX_data[0] = 0x01;
		CAN_Send_Payload(payload);
		Delay_s(1);
	}
}

/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"
#include "GPIO.h"
#include "Console.h"

int main(void)
{
	MCU_Clock_Init(Use_External_Crystal);
	Console_Init(115200);

	RCC -> APB2ENR |= RCC_APB2ENR_TIM1EN;

	TIM1 -> CCMR1 |=  TIM_CCMR1_CC1S_0;
	TIM1 -> CCMR1 &= ~TIM_CCMR1_CC1S_1;
	TIM1 -> CCMR1 |= (TIM_CCMR1_IC1F_0 | TIM_CCMR1_IC1F_1);
	TIM1 -> CCER &= ~TIM_CCER_CC1P;
	TIM1 -> CCMR1 &= ~TIM_CCMR1_IC1PSC;
	TIM1 -> CCER |= TIM_CCER_CC1E;
	TIM1 -> CR1 |= TIM_CR1_CEN;
	TIM1 -> SR = ~TIM_SR_CC2IF;

	while(!(TIM -> SR & TIM_SR_CC1IF)){}
	return (uint16_t)TIM->CCR1;



    /* Loop forever */
	for(;;);
}

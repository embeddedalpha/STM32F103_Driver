/*
 * CAN.c
 *
 *  Created on: May 16, 2022
 *      Author: Kunal
 */


#include "CAN.h"


void CAN_Init(int32_t baudrate)
{
	RCC -> APB1ENR |= RCC_APB1ENR_CAN1EN;
	GPIO_Pin_Setup(GPIOA, 3, ALT_FUNCTION_OUTPUT_PUSH_PULL);
	GPIO_Pin_Setup(GPIOA, 4, INPUT_FLOATING);
	CAN1 -> MCR |= CAN_MCR_INRQ;
	while(!(CAN1-> MSR & CAN_MSR_INAK)){}
	CAN1 -> BTR = baudrate;

}

/*
	struct CAN_Mailbox1{
	uint32_t Standard_ID;
	uint32_t Extended_ID;
	int ID_Type;
	int Frame_Type;
	int DLC;
	int data[0];
	int data[1];
	int data[2];
	int data[3];
	int data[4];
	int data[5];
	int data[6];
	int data[7];
}CAN_Mailbox1;
 */

void CAN_TX_Mailbox1(void)
{

	CAN1 -> sTxMailBox[0].T

	switch (CAN_Mailbox1.ID_Type)
	{
		case CAN_ID_Standard:
		{
			switch (CAN_Mailbox1.Frame_Type)
			{
				case CAN_Frame_Data:
				{
					CAN1 -> sTxMailBox[0].T |= CAN_Mailbox1.Standard_ID << 21;
					CAN1 -> sTxMailBox[0] &= ~ (CAN_TI0R_IDE | CAN_TI0R_RTR);
					CAN1 -> sFIFOMailBox

				}
					break;
				case CAN_Frame_Remote:
				{

				}
					break;
			}
		}
			break;
		case CAN_ID_Extended:
		{

		}
			break;
	}

}

void CAN_TX_Mailbox2(void)
{

}

void CAN_TX_Mailbox3(void)
{

}
